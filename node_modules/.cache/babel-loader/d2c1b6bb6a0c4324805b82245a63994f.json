{"ast":null,"code":"var _jsxFileName = \"D:\\\\programmering\\\\react projects\\\\min-hemsida-1\\\\frontend\\\\src\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState, useStyles } from 'react';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport './App.js';\nimport { Bilder } from './Bilder.js';\nimport ReactMarkdown from 'react-markdown';\nimport Markdown from 'markdown-to-jsx';\nimport fs from 'fs';\nimport matter from 'gray-matter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const useStyles = makeStyles({\n    container: {},\n    cardPost: {\n      backgroundColor: \"#ffffff\",\n      marginBottom: \"5px\",\n      borderRadius: '2px'\n    },\n    headerText: {\n      fontWeight: \"bolder\"\n    },\n    headerLink: {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  });\n  const classes = useStyles();\n  const files = fs.readdirSync('posts_md');\n  const posts = files.map(fileName => {\n    const slug = fileName.replace('.md', '');\n    const readFile = fs.readFileSync(`posts/${fileName}`, 'utf8');\n    const {\n      data: frontmatter\n    } = matter(readFile);\n    return {\n      slug,\n      frontmatter\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n  const file_name = 'test.md';\n  const [post, setPost] = useState('');\n  useEffect(() => {\n    import(`./markdown/${file_name}`).then(res => {\n      fetch(res.default).then(res => res.text()).then(res => setPost(res));\n    }).catch(err => console.log(err));\n  });\n  return /*#__PURE__*/_jsxDEV(Markdown, {\n    className: classes.cardPost,\n    children: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Post, \"POzO2n3yv1FGe+GBuezJU+rwJR0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Post;\nexport { Post };\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/programmering/react projects/min-hemsida-1/frontend/src/Post.js"],"names":["React","useEffect","useState","useStyles","Box","Card","CardContent","Typography","makeStyles","Bilder","ReactMarkdown","Markdown","fs","matter","Post","container","cardPost","backgroundColor","marginBottom","borderRadius","headerText","fontWeight","headerLink","textDecoration","color","classes","files","readdirSync","posts","map","fileName","slug","replace","readFile","readFileSync","data","frontmatter","props","file_name","post","setPost","then","res","fetch","default","text","catch","err","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,UAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAQC,aAAR,MAA4B,gBAA5B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMX,SAAS,GAAGK,UAAU,CAAC;AAC3BO,IAAAA,SAAS,EAAE,EADgB;AAG3BC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,eAAe,EAAE,SADT;AAERC,MAAAA,YAAY,EAAE,KAFN;AAGRC,MAAAA,YAAY,EAAE;AAHN,KAHiB;AAQ3BC,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE;AADF,KARe;AAW3BC,IAAAA,UAAU,EAAE;AACVC,MAAAA,cAAc,EAAE,MADN;AAEVC,MAAAA,KAAK,EAAE;AAFG;AAXe,GAAD,CAA5B;AAiBA,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AAEA,QAAMuB,KAAK,GAAGd,EAAE,CAACe,WAAH,CAAe,UAAf,CAAd;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWC,QAAD,IAAc;AACpC,UAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAb;AACA,UAAMC,QAAQ,GAAGrB,EAAE,CAACsB,YAAH,CAAiB,SAAQJ,QAAS,EAAlC,EAAqC,MAArC,CAAjB;AACA,UAAM;AAAEK,MAAAA,IAAI,EAAEC;AAAR,QAAuBvB,MAAM,CAACoB,QAAD,CAAnC;AACA,WAAO;AACLF,MAAAA,IADK;AAELK,MAAAA;AAFK,KAAP;AAID,GARa,CAAd;AAWA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLT,MAAAA;AADK;AADF,GAAP;AAOA,QAAMU,SAAS,GAAG,SAAlB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,WAAQ,cAAaqC,SAAU,EAA/B,EACCG,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL,CACCH,IADD,CACMC,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADb,EAECJ,IAFD,CAEMC,GAAG,IAAIF,OAAO,CAACE,GAAD,CAFpB;AAGD,KALD,EAMCI,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANd;AAQD,GATQ,CAAT;AAWE,sBACJ,QAAC,QAAD;AAAU,IAAA,SAAS,EAAEtB,OAAO,CAACT,QAA7B;AAAA,cAAyCuB;AAAzC;AAAA;AAAA;AAAA;AAAA,UADI;AAGD,CA1DH;;GAAMzB,I;UAmBYX,S;;;KAnBZW,I;AA4DJ,SAAQA,IAAR","sourcesContent":["import { React, useEffect, useState, useStyles } from 'react'\r\nimport { Box, Card, CardContent, Typography } from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport './App.js'\r\nimport { Bilder } from './Bilder.js'\r\nimport  ReactMarkdown  from 'react-markdown'\r\nimport Markdown from 'markdown-to-jsx';\r\nimport fs from 'fs';\r\nimport matter from 'gray-matter'\r\n\r\n\r\n\r\nconst Post = () => {\r\n\r\n  const useStyles = makeStyles({\r\n    container: {\r\n    },\r\n    cardPost: {\r\n      backgroundColor: \"#ffffff\",\r\n      marginBottom: \"5px\",\r\n      borderRadius: '2px'\r\n    },\r\n    headerText: {\r\n      fontWeight: \"bolder\"\r\n    },\r\n    headerLink: {\r\n      textDecoration: \"none\",\r\n      color: \"black\"\r\n    },\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const files = fs.readdirSync('posts_md');\r\n\r\n  const posts = files.map((fileName) => {\r\n    const slug = fileName.replace('.md', '');\r\n    const readFile = fs.readFileSync(`posts/${fileName}`, 'utf8');\r\n    const { data: frontmatter} = matter(readFile);\r\n    return {\r\n      slug,\r\n      frontmatter\r\n    }\r\n  })\r\n\r\n\r\n  return {\r\n    props: {\r\n      posts\r\n    }\r\n  }\r\n\r\n\r\n  const file_name = 'test.md';\r\n  const [post, setPost] = useState('');\r\n\r\n  useEffect(() => {\r\n    import(`./markdown/${file_name}`)\r\n    .then(res => {\r\n      fetch(res.default)\r\n      .then(res => res.text())\r\n      .then(res => setPost(res))\r\n    })\r\n    .catch(err => console.log(err));\r\n  \r\n  })\r\n\r\n    return (   \r\n<Markdown className={classes.cardPost} >{post}</Markdown>\r\n  );  \r\n  };\r\n  \r\n  export {Post};\r\n\r\n"]},"metadata":{},"sourceType":"module"}