{"ast":null,"code":"var _jsxFileName = \"D:\\\\programmering\\\\react projects\\\\min-hemsida-1\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Button, Box, Card, CardContent, Container, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport { Topic } from './Topic.js';\nimport { BildRandom } from './BildRandom.js';\nimport { useMediaQuery } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport Markdown from 'markdown-to-jsx';\nimport { useState, useEffect } from 'react';\nimport postlist from '/posts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isActive = useMediaQuery(\"max-width: 1000px\");\n  const drawerWidth = \"240px\";\n  const drawerHeight = \"250px\";\n  const useStyles = makeStyles({\n    container: {},\n    mainDiv: {\n      textAlign: \"center\",\n      backgroundColor: \"#f4f4f4\",\n      minHeight: \"100vh\",\n      minWidth: \"100vh\"\n    },\n    root: {\n      display: \"inline-flex\",\n      flexDirection: \"row\",\n      justifyContent: 'space-between'\n    },\n    boxLeft: {\n      marginTop: \"20px\"\n    },\n    cardMain: {\n      width: \"700px\",\n      minHeight: \"80vh\",\n      margin: \"20px\"\n    },\n    cardProfile: {\n      width: drawerWidth,\n      height: '200px',\n      marginTop: \"0px\"\n    },\n    cardLeft: {\n      width: drawerWidth,\n      marginTop: drawerHeight\n    },\n    cardRight: {\n      width: drawerWidth,\n      marginTop: drawerHeight,\n      maxHeight: \"400px\"\n    },\n    cardContentMain: {\n      margin: '0',\n      padding: '0'\n    },\n    buttonCard: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      justifyContent: 'space-around',\n      padding: \"10px\",\n      margin: \"2px\",\n      size: \"large\",\n      width: \"150px\"\n    },\n    image: {\n      marginTop: \"10px\",\n      maxWidth: \"100%\"\n    },\n    imgProfile: {\n      marginTop: \"10px\",\n      maxWidth: \"60%\"\n    },\n    imgHeader: {\n      width: \"700px\",\n      height: \"200px\",\n      objectFit: \"cover\"\n    },\n    headerText: {\n      paddingTop: \"20px\",\n      fontFamily: \"monospace\",\n      color: \"rgb(0,0,66)\"\n    }\n  });\n  var randomNum = 2;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainDiv,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.boxLeft,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.cardLeft,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => window.location.href = '/',\n                  className: classes.buttonCard,\n                  children: \"Hem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => window.location.href = '/musik',\n                  className: classes.buttonCard,\n                  children: \"Musik\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => window.location.href = '/bilder',\n                  className: classes.buttonCard,\n                  children: \"Bilder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => window.location.href = '/om_mig',\n                  className: classes.buttonCard,\n                  children: \"Om Mig\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.cardMain,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContentMain,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: classes.imgHeader,\n                src: \"../images/Header-website.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this), \"console.log(\", postlist, \")\", /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.cardRight,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Sidan \\xE4r under konstruktion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XvuZSiiJQwwo6Yf9zvD8px2K9J4=\", false, function () {\n  return [useMediaQuery, useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/programmering/react projects/min-hemsida-1/frontend/src/App.js"],"names":["Button","Box","Card","CardContent","Container","Typography","makeStyles","Topic","BildRandom","useMediaQuery","BrowserRouter","Router","Route","Routes","ReactMarkdown","Markdown","useState","useEffect","postlist","App","isActive","drawerWidth","drawerHeight","useStyles","container","mainDiv","textAlign","backgroundColor","minHeight","minWidth","root","display","flexDirection","justifyContent","boxLeft","marginTop","cardMain","width","margin","cardProfile","height","cardLeft","cardRight","maxHeight","cardContentMain","padding","buttonCard","size","image","maxWidth","imgProfile","imgHeader","objectFit","headerText","paddingTop","fontFamily","color","randomNum","classes","event","window","location","href"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Button, Box, Card, CardContent, Container, Typography } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles'\nimport { Topic } from './Topic.js';\nimport { BildRandom } from './BildRandom.js'\nimport { useMediaQuery } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom'; \nimport  ReactMarkdown  from 'react-markdown';\nimport  Markdown from 'markdown-to-jsx';\nimport { useState, useEffect } from 'react';\nimport postlist from '/posts.json'\n\n\nfunction App() {\n\n  const isActive = useMediaQuery(\"max-width: 1000px\");\n\nconst drawerWidth=\"240px\";\nconst drawerHeight=\"250px\";\n\nconst useStyles = makeStyles({\n  container: {\n  },\n  mainDiv: {\n    textAlign: \"center\",\n    backgroundColor: \"#f4f4f4\",\n    minHeight: \"100vh\",\n    minWidth: \"100vh\"\n  },\n  root: {\n    display:\"inline-flex\",\n    flexDirection: \"row\",\n    justifyContent: 'space-between'\n  },\n  boxLeft: {\n    marginTop: \"20px\",\n  },\n  cardMain: {\n    width: \"700px\",\n    minHeight: \"80vh\",\n    margin: \"20px\",\n  },\n  cardProfile: {\n    width: drawerWidth,\n    height: '200px',\n    marginTop:\"0px\" \n  },\n  cardLeft: {\n    width: drawerWidth,\n    marginTop:drawerHeight\n  },\n  cardRight: {\n    width: drawerWidth,\n    marginTop: drawerHeight,\n    maxHeight: \"400px\"\n  },\n  cardContentMain : {\n    margin: '0',\n    padding: '0'\n  },\n  buttonCard : {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    justifyContent: 'space-around',\n    padding: \"10px\",\n    margin: \"2px\",\n    size: \"large\",\n    width: \"150px\"\n  },\n  image : {\n    marginTop: \"10px\",\n    maxWidth : \"100%\"\n  },\n  imgProfile : {\n    marginTop: \"10px\",\n    maxWidth : \"60%\"\n      },\n  imgHeader : {\n    width : \"700px\",\n    height : \"200px\",\n    objectFit: \"cover\",\n\n      },\n  headerText : {\n    paddingTop: \"20px\",\n    fontFamily: \"monospace\",\n    color: \"rgb(0,0,66)\"\n  } \n})\n\nvar randomNum = 2\n\nconst classes = useStyles();\nreturn (\n    <Router>\n      <div className={classes.mainDiv}>\n      {/* <h1>Fredriks Hemsida</h1> */}\n      <Container className={classes.container}>\n      \n      <Box className={classes.root}>\n\n      <Box className={classes.boxLeft}>\n        {/* <Card className={classes.cardProfile}>\n          <CardContent>\n            <Typography>Fredrik Fischer</Typography>\n            <img className={classes.imgProfile} src=\"../images/profilbild_test.jpg\"></img>\n          </CardContent>\n        </Card> */}\n\n       \n\n\n        <Card className={classes.cardLeft}>\n          <CardContent>\n            <Button onClick={event =>  window.location.href='/'} className={classes.buttonCard}>Hem</Button>\n            <Button onClick={event =>  window.location.href='/musik'} className={classes.buttonCard}>Musik</Button>\n            <Button onClick={event =>  window.location.href='/bilder'} className={classes.buttonCard}>Bilder</Button>\n            <Button onClick={event =>  window.location.href='/om_mig'} className={classes.buttonCard}>Om Mig</Button>\n          </CardContent>\n        </Card>\n      </Box>\n\n      <Card className={classes.cardMain}>\n        <CardContent className={classes.cardContentMain}> \n        <img className={classes.imgHeader} src=\"../images/Header-website.png\"></img>\n  \n        {/* <Post1/> */}\n        console.log({postlist})\n   \n          <Routes>\n          {/* <Route path=\"/\" element={<Topic/>}/>\n            <Route path=\"/:topic\" element={<Topic/>}/>\n            <Route path=\"/post/:id\" element={<Post/>}/> */}\n          </Routes>\n        </CardContent>\n      </Card>\n\n\n     <Card className={classes.cardRight}>\n      <CardContent>\n      <Typography>Sidan är under konstruktion</Typography>\n        {/* <BildRandom></BildRandom> */}\n      </CardContent>\n     </Card>\n\n      </Box>\n      </Container>\n      \n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}