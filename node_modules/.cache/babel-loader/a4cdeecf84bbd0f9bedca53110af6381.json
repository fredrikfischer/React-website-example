{"ast":null,"code":"var _jsxFileName = \"D:\\\\programmering\\\\react projects\\\\min-hemsida-1\\\\frontend\\\\src\\\\Post1.js\";\nimport { React, useEffect, useState, useStyles } from 'react';\nimport { Box, Card, CardContent, Typography, Link } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport './App.js';\nimport fs from 'fs';\nimport matter from 'gray-matter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function getStaticProps() {\n  const files = fs.readdirSync('posts_md');\n  const posts = files.map(fileName => {\n    const slug = fileName.replace('.md', '');\n    const readFile = fs.readFileSync(`posts/${fileName}`, 'utf8');\n    const {\n      data: frontmatter\n    } = matter(readFile);\n    return {\n      slug,\n      frontmatter\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n}\n\nfunction Post1(_ref) {\n  let {\n    posts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [posts, posts === null || posts === void 0 ? void 0 : posts.map(_ref2 => {\n      let {\n        slug,\n        frontmatter\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/post/${slug}`,\n          children: frontmatter.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Post1;\nexport { Post1 };\n\nvar _c;\n\n$RefreshReg$(_c, \"Post1\");","map":{"version":3,"sources":["D:/programmering/react projects/min-hemsida-1/frontend/src/Post1.js"],"names":["React","useEffect","useState","useStyles","Box","Card","CardContent","Typography","Link","makeStyles","fs","matter","getStaticProps","files","readdirSync","posts","map","fileName","slug","replace","readFile","readFileSync","data","frontmatter","props","Post1","title"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,IAA7C,QAAyD,oBAAzD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,UAAP;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAQA,OAAO,eAAeC,cAAf,GAA+B;AACpC,QAAMC,KAAK,GAAGH,EAAE,CAACI,WAAH,CAAe,UAAf,CAAd;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWC,QAAD,IAAc;AACpC,UAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAb;AACA,UAAMC,QAAQ,GAAGV,EAAE,CAACW,YAAH,CAAiB,SAAQJ,QAAS,EAAlC,EAAqC,MAArC,CAAjB;AACA,UAAM;AAAEK,MAAAA,IAAI,EAAEC;AAAR,QAAuBZ,MAAM,CAACS,QAAD,CAAnC;AACA,WAAO;AACLF,MAAAA,IADK;AAELK,MAAAA;AAFK,KAAP;AAID,GARa,CAAd;AAUA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLT,MAAAA;AADK;AADF,GAAP;AAKD;;AAED,SAASU,KAAT,OAAwB;AAAA,MAAT;AAACV,IAAAA;AAAD,GAAS;AACtB,sBACE;AAAA,eAEGA,KAFH,EAIGA,KAJH,aAIGA,KAJH,uBAIGA,KAAK,CAAEC,GAAP,CAAW;AAAA,UAAC;AAAEE,QAAAA,IAAF;AAAQK,QAAAA;AAAR,OAAD;AAAA,0BAEV;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,SAAQL,IAAK,EAA1B;AAAA,oBACGK,WAAW,CAACG;AADf;AAAA;AAAA;AAAA;AAAA;AADF,SAAUR,IAAV;AAAA;AAAA;AAAA;AAAA,cAFU;AAAA,KAAX,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAhBQO,K;AAkBT,SAAQA,KAAR","sourcesContent":["import { React, useEffect, useState, useStyles } from 'react'\r\nimport { Box, Card, CardContent, Typography, Link } from '@material-ui/core/';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport './App.js'\r\nimport fs from 'fs';\r\nimport matter from 'gray-matter';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function getStaticProps(){\r\n  const files = fs.readdirSync('posts_md');\r\n\r\n  const posts = files.map((fileName) => {\r\n    const slug = fileName.replace('.md', '');\r\n    const readFile = fs.readFileSync(`posts/${fileName}`, 'utf8');\r\n    const { data: frontmatter} = matter(readFile);\r\n    return {\r\n      slug,\r\n      frontmatter\r\n    }\r\n  })\r\n\r\n  return {\r\n    props: {\r\n      posts\r\n    }\r\n  }\r\n}\r\n\r\nfunction Post1({posts}) {\r\n  return (\r\n    <div>\r\n\r\n      {posts}\r\n\r\n      {posts?.map(({ slug, frontmatter}) => (\r\n        \r\n        <div key={slug}>\r\n          <Link href={`/post/${slug}`}>\r\n            {frontmatter.title}\r\n          </Link>\r\n        </div> \r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Post1}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}