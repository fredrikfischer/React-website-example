{"ast":null,"code":"'use strict';\n\nmodule.exports = function (name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n\n  if (typeof engine === 'function') {\n    engine = {\n      parse: engine\n    };\n  }\n\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n\n    default:\n      {\n        return name;\n      }\n  }\n}","map":{"version":3,"sources":["D:/programmering/react projects/min-hemsida-1/frontend/node_modules/gray-matter/lib/engine.js"],"names":["module","exports","name","options","engine","engines","aliase","Error","parse","toLowerCase"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,OAAf,EAAwB;AACvC,MAAIC,MAAM,GAAGD,OAAO,CAACE,OAAR,CAAgBH,IAAhB,KAAyBC,OAAO,CAACE,OAAR,CAAgBC,MAAM,CAACJ,IAAD,CAAtB,CAAtC;;AACA,MAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAM,IAAIG,KAAJ,CAAU,yBAAyBL,IAAzB,GAAgC,qBAA1C,CAAN;AACD;;AACD,MAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,IAAAA,MAAM,GAAG;AAAEI,MAAAA,KAAK,EAAEJ;AAAT,KAAT;AACD;;AACD,SAAOA,MAAP;AACD,CATD;;AAWA,SAASE,MAAT,CAAgBJ,IAAhB,EAAsB;AACpB,UAAQA,IAAI,CAACO,WAAL,EAAR;AACE,SAAK,IAAL;AACA,SAAK,YAAL;AACE,aAAO,YAAP;;AACF,SAAK,QAAL;AACA,SAAK,cAAL;AACA,SAAK,MAAL;AACE,aAAO,QAAP;;AACF,SAAK,MAAL;AACA,SAAK,KAAL;AACE,aAAO,MAAP;;AACF;AAAS;AACP,eAAOP,IAAP;AACD;AAbH;AAeD","sourcesContent":["'use strict';\n\nmodule.exports = function(name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n  if (typeof engine === 'function') {\n    engine = { parse: engine };\n  }\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n    default: {\n      return name;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}