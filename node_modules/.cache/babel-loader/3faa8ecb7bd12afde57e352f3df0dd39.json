{"ast":null,"code":"'use strict';\n\nconst typeOf = require('kind-of');\n\nconst stringify = require('./stringify');\n\nconst utils = require('./utils');\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\n\nmodule.exports = function (file) {\n  if (typeOf(file) !== 'object') {\n    file = {\n      content: file\n    };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  } // if file was passed as an object, ensure that\n  // \"file.content\" is set\n\n\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  } // set non-enumerable properties on the file object\n\n\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function (data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n\n    return stringify(file, data, options);\n  }); // strip BOM and ensure that \"file.content\" is a string\n\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};","map":{"version":3,"sources":["D:/programmering/react projects/min-hemsida-1/frontend/node_modules/gray-matter/lib/to-file.js"],"names":["typeOf","require","stringify","utils","module","exports","file","content","data","contents","define","toBuffer","language","matter","options","toString","isEmpty","excerpt"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIN,MAAM,CAACM,IAAD,CAAN,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,IAAI,GAAG;AAAEC,MAAAA,OAAO,EAAED;AAAX,KAAP;AACD;;AAED,MAAIN,MAAM,CAACM,IAAI,CAACE,IAAN,CAAN,KAAsB,QAA1B,EAAoC;AAClCF,IAAAA,IAAI,CAACE,IAAL,GAAY,EAAZ;AACD,GAP6B,CAS9B;AACA;;;AACA,MAAIF,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACC,OAAL,IAAgB,IAArC,EAA2C;AACzCD,IAAAA,IAAI,CAACC,OAAL,GAAeD,IAAI,CAACG,QAApB;AACD,GAb6B,CAe9B;;;AACAN,EAAAA,KAAK,CAACO,MAAN,CAAaJ,IAAb,EAAmB,MAAnB,EAA2BH,KAAK,CAACQ,QAAN,CAAeL,IAAI,CAACC,OAApB,CAA3B;AACAJ,EAAAA,KAAK,CAACO,MAAN,CAAaJ,IAAb,EAAmB,UAAnB,EAA+BA,IAAI,CAACM,QAAL,IAAiB,EAAhD;AACAT,EAAAA,KAAK,CAACO,MAAN,CAAaJ,IAAb,EAAmB,QAAnB,EAA6BA,IAAI,CAACO,MAAL,IAAe,EAA5C;AACAV,EAAAA,KAAK,CAACO,MAAN,CAAaJ,IAAb,EAAmB,WAAnB,EAAgC,UAASE,IAAT,EAAeM,OAAf,EAAwB;AACtD,QAAIA,OAAO,IAAIA,OAAO,CAACF,QAAvB,EAAiC;AAC/BN,MAAAA,IAAI,CAACM,QAAL,GAAgBE,OAAO,CAACF,QAAxB;AACD;;AACD,WAAOV,SAAS,CAACI,IAAD,EAAOE,IAAP,EAAaM,OAAb,CAAhB;AACD,GALD,EAnB8B,CA0B9B;;AACAR,EAAAA,IAAI,CAACC,OAAL,GAAeJ,KAAK,CAACY,QAAN,CAAeT,IAAI,CAACC,OAApB,CAAf;AACAD,EAAAA,IAAI,CAACU,OAAL,GAAe,KAAf;AACAV,EAAAA,IAAI,CAACW,OAAL,GAAe,EAAf;AACA,SAAOX,IAAP;AACD,CA/BD","sourcesContent":["'use strict';\n\nconst typeOf = require('kind-of');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\nmodule.exports = function(file) {\n  if (typeOf(file) !== 'object') {\n    file = { content: file };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  }\n\n  // if file was passed as an object, ensure that\n  // \"file.content\" is set\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  }\n\n  // set non-enumerable properties on the file object\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function(data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n    return stringify(file, data, options);\n  });\n\n  // strip BOM and ensure that \"file.content\" is a string\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};\n"]},"metadata":{},"sourceType":"script"}